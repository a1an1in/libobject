function (test arg)
    message(${arg})
endfunction()

function (find_source_files ret)
    file(GLOB_RECURSE files ${PROJECT_SOURCE_DIR}/src/*.c)
    set(${ret} ${files} PARENT_SCOPE)
endfunction()

function (find_main_file ret)
    file(GLOB_RECURSE file ${PROJECT_SOURCE_DIR}/src main.c)
    set(${ret} ${file} PARENT_SCOPE)
endfunction()

function (find_module_files ret module_name)
    file(GLOB_RECURSE files */${module_name}/*.c)
    set(${ret} ${files} PARENT_SCOPE)
endfunction()

function (exclude_files ret source filted_files)
  #message("filted_files: ${filted_files}")
  #message("pre: ${source}")
  list( REMOVE_ITEM source ${filted_files} )
  #message("abc: ${source}")
  set(${ret} ${source} PARENT_SCOPE)
endfunction()

function (init_platform platform)
    if (platform STREQUAL "android")
        set(CMAKE_SYSTEM_NAME Android PARENT_SCOPE)
        set(CMAKE_SYSTEM_VERSION 22 PARENT_SCOPE) # API level
        #set(CMAKE_ANDROID_ARCH_ABI armeabi-v7a PARENT_SCOPE)
        #set(ANDROID_ABI arm64-v8a PARENT_SCOPE)
        #set(ANDROID_ABI x86_64 PARENT_SCOPE)
        #set(ANDROID_ABI x86 PARENT_SCOPE)
        set(ANDROID_ABI armeabi-v7a PARENT_SCOPE)
        set(CMAKE_ANDROID_NDK /Users/alanlin/Library/Android/sdk/ndk-bundle PARENT_SCOPE)
        set(CMAKE_ANDROID_STL_TYPE gnustl_static PARENT_SCOPE)
        set(CMAKE_TOOLCHAIN_FILE /Users/alanlin/Library/Android/sdk/ndk-bundle/build/cmake/android.toolchain.cmake PARENT_SCOPE)
    endif()
endfunction()

function (config_platform platform)
    if (platform STREQUAL "mac")
        include (mk/mac.cmake)
        message("mac Platform")
    elseif (platform STREQUAL "android")
        include (mk/android.cmake)
        message("android Platform")
    elseif (platform STREQUAL "ios")
        include (mk/ios.cmake)
        message("ios Platform")
    else ()
        include (mk/mac.cmake)
        message("default Platform")
    endif()
endfunction()
